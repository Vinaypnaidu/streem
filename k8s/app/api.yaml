# k8s/app/api.yaml

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: api
  namespace: streemm
spec:
  replicas: 1
  selector:
    matchLabels:
      app: api
  template:
    metadata:
      labels:
        app: api
    spec:
      initContainers:
      # Run database migrations before starting the API
      - name: migrations
        image: python:3.11-slim
        command:
        - sh
        - -c
        - |
          apt-get update && apt-get install -y postgresql-client
          pip install --no-cache-dir -r /app/requirements.txt
          cd /app && alembic upgrade head
        envFrom:
        - secretRef:
            name: streemm-secrets
        - configMapRef:
            name: streemm-config
        volumeMounts:
        - name: api-code
          mountPath: /app
      containers:
      - name: api
        image: python:3.11-slim
        command:
        - sh
        - -c
        - |
          pip install --no-cache-dir -r /app/requirements.txt
          cd /app && uvicorn main:app --host 0.0.0.0 --port 8000 --reload
        ports:
        - containerPort: 8000
          name: http
        envFrom:
        - secretRef:
            name: streemm-secrets
        - configMapRef:
            name: streemm-config
        volumeMounts:
        - name: api-code
          mountPath: /app
        resources:
          requests:
            memory: "512Mi"
            cpu: "500m"
          limits:
            memory: "1Gi"
            cpu: "1000m"
        startupProbe:
          httpGet:
            path: /healthz/live
            port: 8000
          initialDelaySeconds: 60
          periodSeconds: 10
          failureThreshold: 60
        livenessProbe:
          httpGet:
            path: /healthz/live
            port: 8000
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          httpGet:
            path: /healthz/ready
            port: 8000
          periodSeconds: 10
          timeoutSeconds: 10
          failureThreshold: 3
      volumes:
      - name: api-code
        hostPath:
          path: /streemm/apps/api
          type: Directory

---
# ClusterIP service for internal communication
apiVersion: v1
kind: Service
metadata:
  name: api
  namespace: streemm
spec:
  selector:
    app: api
  ports:
  - port: 8000
    targetPort: 8000
    name: http

---
# NodePort service for external access (localhost:8000)
apiVersion: v1
kind: Service
metadata:
  name: api-external
  namespace: streemm
spec:
  type: NodePort
  selector:
    app: api
  ports:
  - port: 8000
    targetPort: 8000
    nodePort: 30001
    name: http
