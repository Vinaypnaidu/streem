"""fresh init

Revision ID: 6b5b3b8e03a4
Revises: 
Create Date: 2025-09-23 18:10:42.701209

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '6b5b3b8e03a4'
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('users',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('email', sa.String(length=320), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('last_login_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_users')),
    sa.UniqueConstraint('email', name=op.f('uq_users_email'))
    )
    op.create_table('videos',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('title', sa.String(), server_default='', nullable=False),
    sa.Column('description', sa.String(), server_default='', nullable=False),
    sa.Column('original_filename', sa.String(), nullable=False),
    sa.Column('storage_key_raw', sa.String(), nullable=False),
    sa.Column('status', sa.String(), nullable=False),
    sa.Column('probe', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('duration_seconds', sa.Float(), nullable=True),
    sa.Column('checksum_sha256', sa.String(), nullable=True),
    sa.Column('error', sa.String(), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('notified_at', sa.DateTime(timezone=True), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_videos_user_id_users'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_videos'))
    )
    op.create_index('ix_videos_user_id_created_at', 'videos', ['user_id', 'created_at'], unique=False)
    op.create_table('video_assets',
    sa.Column('id', sa.UUID(), nullable=False),
    sa.Column('video_id', sa.UUID(), nullable=False),
    sa.Column('kind', sa.String(), nullable=False),
    sa.Column('label', sa.String(), nullable=False),
    sa.Column('storage_key', sa.String(), nullable=False),
    sa.Column('meta', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.Column('updated_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], name=op.f('fk_video_assets_video_id_videos'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('id', name=op.f('pk_video_assets')),
    sa.UniqueConstraint('video_id', 'kind', 'label', name=op.f('uq_video_assets_video_id'))
    )
    op.create_index('ix_video_assets_video_id', 'video_assets', ['video_id'], unique=False)
    op.create_table('watch_history',
    sa.Column('user_id', sa.UUID(), nullable=False),
    sa.Column('video_id', sa.UUID(), nullable=False),
    sa.Column('last_position_seconds', sa.Float(), server_default='0', nullable=False),
    sa.Column('last_watched_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], name=op.f('fk_watch_history_user_id_users'), ondelete='CASCADE'),
    sa.ForeignKeyConstraint(['video_id'], ['videos.id'], name=op.f('fk_watch_history_video_id_videos'), ondelete='CASCADE'),
    sa.PrimaryKeyConstraint('user_id', 'video_id', name=op.f('pk_watch_history'))
    )
    op.create_index('ix_watch_history_user_lastwatched', 'watch_history', ['user_id', 'last_watched_at'], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index('ix_watch_history_user_lastwatched', table_name='watch_history')
    op.drop_table('watch_history')
    op.drop_index('ix_video_assets_video_id', table_name='video_assets')
    op.drop_table('video_assets')
    op.drop_index('ix_videos_user_id_created_at', table_name='videos')
    op.drop_table('videos')
    op.drop_table('users')
    # ### end Alembic commands ###
